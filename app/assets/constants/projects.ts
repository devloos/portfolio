import type { Project } from '~/types';

export const FEATURED_PROJECTS: Project[] = [
  {
    id: 9,
    title: 'Saddleback Robotics',
    description:
      "I developed a base station web GUI to enhance control and functionality for the Telecommunications, Autonomy, and Science subsystems. This interface provided essential GPS and heading data for rover navigation and enabled full control of the science platform, including liquid pumps, height adjustments, and drilling. Built with Django and integrated into ROS2, this system improved our team's placement by three ranks in the 2024/2025 competition.",
    featured: true,
    site: 'https://www.youtube.com/watch?v=2kkPbTSSpe0',
    source: 'https://github.com/SaddlebackCollegeRobotics',
    file: {
      src: '/portfolio/projects/saddleback-robotics.mp4',
      type: 'video',
    },
    visible: true,
    tags: [
      {
        id: 13,
        title: 'Python',
        logoName: 'python',
        url: 'https://docs.python.org/3',
        featured: true,
      },
      {
        id: 21,
        title: 'ROS2',
        logoName: null,
        url: 'https://docs.ros.org/en/humble/index.html',
        featured: false,
      },
      {
        id: 22,
        title: 'NAV2',
        logoName: null,
        url: null,
        featured: false,
      },
      {
        id: 23,
        title: 'odrive',
        logoName: null,
        url: null,
        featured: false,
      },
      {
        id: 24,
        title: 'Robotics',
        logoName: null,
        url: null,
        featured: false,
      },
      {
        id: 25,
        title: 'Autonomous Vehicles',
        logoName: null,
        url: null,
        featured: false,
      },
      {
        id: 14,
        title: 'Linux',
        logoName: 'linux',
        url: 'https://github.com/torvalds/linux',
        featured: false,
      },
    ],
  },
  {
    id: 2,
    title: 'Street Fighter',
    description:
      'Built a multiplayer Street Fighter-style game using Java. Leveraged multithreading to handle gameplay and rendering smoothly while ensuring players could connect seamlessly over a network. Utilized locks and volatile memory to ensure thread safety and prevent race conditions. Established a client-server architecture for players to communicate over a network. Implemented data serialization for exchanging game state information between clients and the server.',
    featured: true,
    site: null,
    source: 'https://github.com/devloos/Street-Fighter',
    file: {
      src: '/portfolio/projects/street-fighter.mp4',
      type: 'video',
    },
    visible: true,
    tags: [
      {
        id: 15,
        title: 'JavaFX',
        logoName: null,
        url: null,
        featured: false,
      },
      {
        id: 16,
        title: 'Maven',
        logoName: 'apachemaven',
        url: null,
        featured: false,
      },
      {
        id: 12,
        title: 'Java',
        logoName: 'openjdk',
        url: 'https://www.tutorialspoint.com/java/java_documentation.htm',
        featured: true,
      },
    ],
  },
  {
    id: 5,
    title: 'Monster Quest',
    description:
      'Developed a Python RPG inspired by Pok√©mon and Final Fantasy using pygame-ce, including modular OOP design for scalability, event-driven programming for smooth gameplay, and sprite-based animations for visual appeal. Optimized the game loop for performance and ensured code readability, extensibility, and reusable utilities.',
    featured: true,
    site: null,
    source: 'https://github.com/devloos/monster-quest',
    file: {
      src: '/portfolio/projects/monster-quest.mp4',
      type: 'video',
    },
    visible: true,
    tags: [
      {
        id: 13,
        title: 'Python',
        logoName: 'python',
        url: 'https://docs.python.org/3',
        featured: true,
      },
      {
        id: 37,
        title: 'Tiled Map Editor',
        logoName: null,
        url: 'https://www.mapeditor.org/',
        featured: false,
      },
      {
        id: 38,
        title: 'Pygame',
        logoName: null,
        url: 'https://pyga.me/',
        featured: false,
      },
    ],
  },
  {
    id: 4,
    title: 'Sales System',
    description:
      'Developed a terminal-based POS system in C++ featuring auto-complete, employee hierarchy, UUID generation, and receipt creation without external libraries. Utilized RAII for memory safety, move semantics for efficiency, and custom STL containers for robust data handling, optimizing performance and code maintainability.',
    featured: true,
    site: null,
    source: 'https://github.com/devloos/Sales-System',
    file: {
      src: '/portfolio/projects/sales-system.mp4',
      type: 'video',
    },
    visible: true,
    tags: [
      {
        id: 5,
        title: 'C++',
        logoName: 'cplusplus',
        url: 'https://en.cppreference.com/w',
        featured: true,
      },
      {
        id: 14,
        title: 'Linux',
        logoName: 'linux',
        url: 'https://github.com/torvalds/linux',
        featured: false,
      },
      {
        id: 18,
        title: 'CMake',
        logoName: 'cmake',
        url: 'https://cmake.org/cmake/help/latest',
        featured: false,
      },
    ],
  },
] as const;

export const PROJECTS: Project[] = [
  {
    id: 3,
    title: 'Graphics Modeler',
    description:
      "This project implements a C++ library for 2D graphical objects, emphasizing core programming concepts such as inheritance, aggregation, polymorphism, and more. It utilizes Qt's GUI capabilities, featuring a user-friendly interface for manipulating object properties and adheres to agile development methodologies, including Scrum practices and UML diagrams for design and implementation planning.",
    featured: false,
    site: null,
    source: 'https://github.com/devloos/Graphics-Modeler',
    file: {
      src: '/portfolio/projects/graphics-modeler.mp4',
      type: 'video',
    },
    visible: true,
    tags: [
      {
        id: 5,
        title: 'C++',
        logoName: 'cplusplus',
        url: 'https://en.cppreference.com/w',
        featured: true,
      },
      {
        id: 14,
        title: 'Linux',
        logoName: 'linux',
        url: 'https://github.com/torvalds/linux',
        featured: false,
      },
      {
        id: 17,
        title: 'QT',
        logoName: 'qt',
        url: 'https://doc.qt.io',
        featured: false,
      },
      {
        id: 18,
        title: 'CMake',
        logoName: 'cmake',
        url: 'https://cmake.org/cmake/help/latest',
        featured: false,
      },
    ],
  },
  {
    id: 8,
    title: 'Terminal Snake Game',
    description:
      'Developed a terminal-based Snake game using modern C++ and ncurses. Implemented a modular architecture, separating game logic, rendering, and input handling for maintainability and scalability.',
    featured: false,
    site: null,
    source: 'https://github.com/devloos/Snake-Game',
    file: null,
    visible: true,
    tags: [
      {
        id: 5,
        title: 'C++',
        logoName: 'cplusplus',
        url: 'https://en.cppreference.com/w',
        featured: true,
      },
      {
        id: 45,
        title: 'Tui',
        logoName: null,
        url: null,
        featured: false,
      },
      {
        id: 46,
        title: 'Ncurses',
        logoName: null,
        url: null,
        featured: false,
      },
      {
        id: 18,
        title: 'CMake',
        logoName: 'cmake',
        url: 'https://cmake.org/cmake/help/latest',
        featured: false,
      },
    ],
  },
  {
    id: 11,
    title: 'Standard Template Library',
    description:
      'A custom implementation of my own version of the C++ Standard Template Library (STL). This repository serves as a growing library where I design and add various data structures as I encounter the need for them in different projects. Each data structure is implemented to mimic or enhance the functionality found in the standard STL.',
    featured: false,
    site: null,
    source: 'https://github.com/devloos/STL',
    file: null,
    visible: true,
    tags: [
      {
        id: 5,
        title: 'C++',
        logoName: 'cplusplus',
        url: 'https://en.cppreference.com/w',
        featured: true,
      },
      {
        id: 47,
        title: 'Library',
        logoName: null,
        url: null,
        featured: false,
      },
      {
        id: 14,
        title: 'Linux',
        logoName: 'linux',
        url: 'https://github.com/torvalds/linux',
        featured: false,
      },
    ],
  },
  {
    id: 6,
    title: 'Vue.js Snippets (Vscode Extension)',
    description:
      'Vue.js snippets to increase your productivity (supports vue 3). Has reached over 10,000 active users.',
    featured: false,
    site: 'https://marketplace.visualstudio.com/items?itemName=devlos.vuejs-snippets',
    source: 'https://github.com/devloos/vuejs-snippets',
    file: null,
    visible: true,
    tags: [
      {
        id: 3,
        title: 'Vue.js',
        logoName: 'vuedotjs',
        url: 'https://vuejs.org/guide/introduction.html',
        featured: true,
      },
      {
        id: 39,
        title: 'Vscode',
        logoName: null,
        url: null,
        featured: false,
      },
      {
        id: 40,
        title: 'Extensions',
        logoName: null,
        url: null,
        featured: false,
      },
    ],
  },
  {
    id: 7,
    title: 'Raycast Format JSON Extension',
    description:
      'Formats a JSON file with a selected indentation. If the JSON is stringified, it will be parsed before formatting. Reached over 30k active users.',
    featured: false,
    site: 'https://www.raycast.com/destiner/json-format',
    source:
      'https://github.com/raycast/extensions/tree/de2627a96b88691ce3d523f23dc778a651cd8368/extensions/json-format',
    file: null,
    visible: true,
    tags: [
      {
        id: 42,
        title: 'Typescript',
        logoName: null,
        url: null,
        featured: false,
      },
      {
        id: 43,
        title: 'Raycast',
        logoName: null,
        url: null,
        featured: false,
      },
      {
        id: 44,
        title: 'Extensions',
        logoName: null,
        url: null,
        featured: false,
      },
      {
        id: 41,
        title: 'React.js',
        logoName: 'react',
        url: null,
        featured: true,
      },
    ],
  },
  {
    id: 1,
    title: 'El Andariego',
    description:
      'Developed a responsive website for a local food truck. Added language switching (i18n), Square API for online orders, and automated emails for confirmations, helping the business grow its customer base. Implemented cron jobs to automate database updates for new menu items and designed reusable utility components, including image, table, select, and calendar tools.',
    featured: false,
    site: 'https://www.elandariegotruck.com/',
    source: 'https://github.com/devloos/El-Andariego',
    file: {
      src: '/portfolio/projects/el-andariego-1704676212150.mp4',
      type: 'video',
    },
    visible: true,
    tags: [
      {
        id: 3,
        title: 'Vue.js',
        logoName: 'vuedotjs',
        url: 'https://vuejs.org/guide/introduction.html',
        featured: true,
      },
      {
        id: 6,
        title: 'Tailwind CSS',
        logoName: 'tailwindcss',
        url: 'https://tailwindcss.com/docs/installation',
        featured: true,
      },
      {
        id: 10,
        title: 'MongoDB',
        logoName: 'mongodb',
        url: 'https://www.mongodb.com/docs',
        featured: true,
      },
      {
        id: 1,
        title: 'Typescript',
        logoName: 'typescript',
        url: 'https://www.typescriptlang.org/docs/',
        featured: true,
      },
      {
        id: 9,
        title: 'Laravel',
        logoName: 'laravel',
        url: 'https://laravel.com/docs/10.x',
        featured: false,
      },
    ],
  },
  {
    id: 10,
    title: 'LeetCode',
    description:
      'This is a curated collection of my solved LeetCode problems. Each problem includes detailed explanations of the solution, with a clear breakdown of time and space complexity to help understand the efficiency of the approach.',
    featured: false,
    site: 'https://leetcode.com/u/devlos',
    source: 'https://github.com/devloos/Leetcode',
    file: null,
    visible: true,
    tags: [
      {
        id: 5,
        title: 'C++',
        logoName: 'cplusplus',
        url: 'https://en.cppreference.com/w',
        featured: true,
      },
      {
        id: 13,
        title: 'Python',
        logoName: 'python',
        url: 'https://docs.python.org/3',
        featured: true,
      },
      {
        id: 27,
        title: 'Algorithms',
        logoName: null,
        url: null,
        featured: false,
      },
      {
        id: 1,
        title: 'Typescript',
        logoName: 'typescript',
        url: 'https://www.typescriptlang.org/docs/',
        featured: true,
      },
    ],
  },
  {
    id: 12,
    title: 'Shortcut Manager',
    description:
      'This extension makes managing keyboard shortcuts for your application effortless. It lets you create and customize hotkeys to fit your workflow. It also helps you spot and fix duplicate shortcuts to avoid any conflicts.',
    featured: false,
    site: null,
    source: 'https://github.com/devloos/Shortcut-Manager',
    file: null,
    visible: true,
    tags: [
      {
        id: 42,
        title: 'Typescript',
        logoName: null,
        url: null,
        featured: false,
      },
      {
        id: 43,
        title: 'Raycast',
        logoName: null,
        url: null,
        featured: false,
      },
      {
        id: 44,
        title: 'Extensions',
        logoName: null,
        url: null,
        featured: false,
      },
      {
        id: 41,
        title: 'React.js',
        logoName: 'react',
        url: null,
        featured: true,
      },
    ],
  },
] as const;
